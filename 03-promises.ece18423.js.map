{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAE/BC,iBAAiB,UAAWC,IAC/BA,EAAIC,iBAEJ,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAE5CC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAEpC,IAAIG,EAAc,EAEdC,EAAaC,aAAY,KAC5BF,GAAe,EACZA,IAAgBD,GACjBI,cAAcF,GAUjB,SAAuBG,EAAUd,GAE/B,MAAMe,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACJI,EAAQ,uBAAqBL,QAAiBd,OAE5CoB,EAAK,sBAAoBN,QAAed,MAAU,GAGnDA,EAAM,IAIRsB,MAAMC,GAAU9B,EAAA+B,OAAOC,QAAQF,KAC/BG,OAAMH,GAAW9B,EAAA+B,OAAOG,QAAQJ,I,CAxBnCK,CAAcnB,EAAaJ,EAAW,GACrCG,EAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  \n  const { delay, step, amount } = evt.currentTarget.elements;\n  \n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\nlet innerAmound = 0;\n\nlet intervalId = setInterval(()=>{\n innerAmound += 1;\n if(innerAmound === amountValue){\n   clearInterval(intervalId);\n }\n  createPromise(amountValue, delayValue);\n}, stepValue);\n\n})\n\n\n\n\nfunction createPromise(position, delay) {\n  //  console.log(position, delay);\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`)\n      }\n      \n    }, delay);\n  })\n\n  promise\n    .then( result => Notify.success(result))\n    .catch(result  => Notify.failure(result))\n \n  }\n\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","delay","step","amount","currentTarget","elements","delayValue","Number","value","stepValue","amountValue","innerAmound","intervalId","setInterval","clearInterval","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","result","Notify","success","catch","failure","$47d4ff9957288465$var$createPromise"],"version":3,"file":"03-promises.ece18423.js.map"}